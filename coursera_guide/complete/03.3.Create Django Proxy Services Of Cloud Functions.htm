<!DOCTYPE html>
<!-- saved from url=(0454)https://author-ide.skills.network/render?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZF9pbnN0cnVjdGlvbnNfdXJsIjoiaHR0cHM6Ly9jZi1jb3Vyc2VzLWRhdGEuczMudXMuY2xvdWQtb2JqZWN0LXN0b3JhZ2UuYXBwZG9tYWluLmNsb3VkL0lCTS1DRDAzMjFFTi1Ta2lsbHNOZXR3b3JrL2xhYnMvbW9kdWxlXzNfYmFja2VuZF9zZXJ2aWNlcy8zLWluc3RydWN0aW9uYWwtbGFicy10aGVpYS1kamFuZ28tcHJveHkubWQiLCJ0b29sX3R5cGUiOiJ0aGVpYSIsImFkbWluIjpmYWxzZSwiaWF0IjoxNjcxNzkxODYyfQ.yCVuGNzfMmlzJjKQFhbVgs0DWWAfaPFzdnpMLWFisIU -->
<html lang="en" style="overflow: hidden;"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Cache-Control" content="no-siteapp">
    <meta name="renderer" content="webkit">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="keywords" content="Editor.md,editor,Markdown Editor,Markdown">
    <meta name="description" content="Skills Network Author IDE">
    <title>Skills Network Editor</title>
    <link rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/style.css">
    <link rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/editormd.css">
    <link rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/custom.css">
    <link rel="shortcut icon" href="https://author-ide.skills.network/public/images/SN_favicon.png" type="image/x-icon">

    <link rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/bootstrap.min.css" integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
    <script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/comms.js.download"></script>
    <script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/alpinejs"></script>
<script id="editormd-lib-xss" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/xss.js.download"></script><link type="text/css" rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/codemirror.min.css"><link type="text/css" rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/foldgutter.css"><script id="editormd-lib-codemirror-codemirror-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/codemirror.min.js.download"></script><script id="editormd-lib-codemirror-modes-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/modes.min.js.download"></script><style>/* cyrillic-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2) format('woff2');
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fCBc4EsA.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fBxc4EsA.woff2) format('woff2');
  unicode-range: U+0370-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fCxc4EsA.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fBBc4.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* cyrillic-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu72xKOzY.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu5mxKOzY.woff2) format('woff2');
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu7mxKOzY.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu4WxKOzY.woff2) format('woff2');
  unicode-range: U+0370-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu7WxKOzY.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu7GxKOzY.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu4mxK.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* cyrillic-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fCRc4EsA.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fABc4EsA.woff2) format('woff2');
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fCBc4EsA.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fBxc4EsA.woff2) format('woff2');
  unicode-range: U+0370-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fCxc4EsA.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fChc4EsA.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fBBc4.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* cyrillic-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfCRc4EsA.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfABc4EsA.woff2) format('woff2');
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfCBc4EsA.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfBxc4EsA.woff2) format('woff2');
  unicode-range: U+0370-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfCxc4EsA.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfChc4EsA.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfBBc4.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
</style><style>.ucbzx-button-wrapper {
    position: absolute !important;
    z-index: 1000 !important;
    top: 0 !important;
    right: 0 !important;
}

.ucbzx-button {
    display: block;
    border: none !important;
    /* outline: none !important; */
    background: #3c3c54 !important;
    padding: 0 !important;
    border-radius: 5px;
    width: 36px !important;
    height: 36px !important;
}

.ucbzx-button:active {
    border: none !important;
}

.ucbzx-button:disabled {
    cursor: default !important;
}

.ucbzx-download-img {
    display: block !important;
    width: 36px !important;
    height: 36px !important;
    cursor: pointer !important;
    margin: 0 !important;
}

.ucbzx-hide {
    display: none !important;
}

.ucbzx-loader {
    display: block;
    box-sizing: content-box !important;
    width: 30px !important;
    height: 30px !important;
    padding: 3px !important;
    animation: rotate 1s linear infinite;
    margin: 0 !important;
}

/*
    RESOLUTIONS CHOICE
*/

.ucbzx-resolutions-list {
    position: absolute !important;
    top: 36px !important;
    right: 0 !important;
    background: #3c3c54 !important;
    color: #dbdbdb !important;
    font-family: 'Roboto', sans-serif !important;
    font-size: 14px !important;
    list-style: none !important;
    padding: 0 !important;
    margin: 0 !important;
}

.ucbzx-resolutions-list li {
    margin: 4px !important;
    padding: 0 !important;
    font-weight: bold !important;
    white-space: nowrap !important;
    width: 130px !important;
    height: 30px !important;
    display: flex !important;
    justify-content: space-between !important;
    align-items: center !important;
}

.ucbzx-list-item-tickbox {
    width: 20px !important;
    height: 20px !important;
    background: rgba(255, 255, 255, 0.219) !important;
    /* border-radius: 5px !important; */
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    /* font-size: 17px !important; */
    /* border: 1px solid rgba(255, 255, 255, 0.835) !important; */
    cursor: pointer !important;
    margin-left: 4px !important;
}

.ucbzx-resolutions-list > li::before {
    display: none;
}

.ucbzx-list-item-tickbox:not(.ucbzx-list-item-tickbox-checked):hover {
    background: rgba(255, 255, 255, 0.37) !important;
}

.ucbzx-list-item-tickbox.ucbzx-list-item-tickbox-checked {
    cursor: default !important;
}

.ucbzx-list-item-tickbox-checked::after {
    content: "\2713" !important;
    color: white !important;
}

.ucbzx-list-item-text {
    /* border-radius: 5px !important; */
    flex-grow: 1 !important;
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    cursor: pointer !important;
    height: 100% !important;
    margin-left: 10px !important;
}

.ucbzx-list-item-text:hover {
    background: rgba(255, 255, 255, 0.37) !important;
    color: white !important;
}

/* account for the fact that we got rid of the tickbox there */
.ucbzx-resolutions-list li[data-type="captions"] .ucbzx-list-item-text {
    margin-left: 34px !important;
    font-style: italic;
}

/*
    MISC
*/

.ucbzx-arrow-container {
    background: none !important;
    position: absolute !important;
    top: 36px !important;
    left: 0 !important;
    width: 0 !important;
    height: 0 !important;
    border-left: 18px solid transparent !important;
    border-right: 18px solid transparent !important;
    border-top: 18px solid #3c3c54 !important;
    /* border-bottom: none !important; */
    cursor: pointer !important;
}

.ucbzx-arrow-container::after {
    position: absolute !important;
    top: -18px !important;
    left: -4px !important;
    content: "" !important;
    border: 1px solid #dbdbdb !important;
    border-width: 0 3px 3px 0 !important;
    display: inline-block !important;
    padding: 3px !important;
    transform: rotate(45deg);
}

.ucbzx-button:focus,
.ucbzx-arrow-container:focus,
.ucbzx-resolutions-list:focus,
.ucbzx-list-item-tickbox:focus,
.ucbzx-list-item-text:focus {
    outline: 1px solid white !important;
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

/*
    RESET STYLES
*/
.ucbzx-button-wrapper button {
    border: none;
    margin: 0;
    padding: 0;
    width: auto;
    overflow: visible;
    background: transparent;
    color: inherit;
    font: inherit;
    outline: none;
    line-height: normal;
    -webkit-font-smoothing: inherit;
    -moz-osx-font-smoothing: inherit;
    -webkit-appearance: none;
}

.ucbzx-button-wrapper li,
.ucbzx-button-wrapper li * {
    margin: 0;
    font: inherit;
    font-style: inherit;
    font-size: inherit;
}</style><script id="editormd-lib-codemirror-addons-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/addons.min.js.download"></script><link type="text/css" rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/pastel-on-dark.css"><script id="editormd-lib-marked-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/marked.min.js.download"></script><script id="editormd-lib-prettify-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/prettify.min.js.download"></script><script id="editormd-lib-raphael-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/raphael.min.js.download"></script><script id="editormd-lib-underscore-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/underscore.min.js.download"></script><script id="editormd-lib-flowchart-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/flowchart.min.js.download"></script><script id="editormd-lib-jquery-flowchart-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/jquery.flowchart.min.js.download"></script><script id="editormd-lib-sequence-diagram-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/sequence-diagram.min.js.download"></script><link type="text/css" rel="stylesheet" href="./03.3.Create Django Proxy Services Of Cloud Functions_files/katex.min.css"><script id="https:-cdnjs-cloudflare-com-ajax-libs-KaTeX-0-15-6-katex-min" type="text/javascript" src="./03.3.Create Django Proxy Services Of Cloud Functions_files/katex.min.js.download"></script></head>

<body style="overflow: hidden;">
    <div id="layout">
    <div id="test-editormd" class="editormd editormd-vertical editormd-theme-dark editormd-fullscreen" style="width: 1280px; height: 601px;">
        <textarea style="display:none;" class="editormd-markdown-textarea" placeholder="Enjoy Markdown! coding now..." name="test-editormd-markdown-doc">::page{title="Create Django Proxy Services Of Cloud Functions"}

&lt;img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-CD0321EN-SkillsNetwork/images/IDSN-logo.png" width="200" alt="cognitiveclass.ai logo"&gt;

##

**Estimated time needed:** 150 minutes

In previous labs, you created car model and car make Django models residing in a local SQLite repository. 
You also created dealer and review models in a remote Cloudant repository (served by IBM Cloud Function actions). 

Now, you need to integrate those models and services to manage all entities such as dealers, reviews, and cars, and 
present the results in Django templates.

To integrate external dealer and review data, you need to call the cloud function APIs from the Django app and 
process the API results in Django views. Such Django views can be seen as proxy services to the end user because
they fetch data from external resources per users' requests.

In this lab, you will create such Django views as proxy services.

::page{title="Environment setup"}

If your Theia workspace has been reset and you want to continue from what you have done previously, 
please `git clone` or pull from your created GitHub repository. 

- Set up the Python runtime if Theia workspace has been reset.

```
python3 -m pip install -U -r requirements.txt
```

Note: You may need to perform models migrations for a new Theia environment.

::page{title="Create a `get_dealerships` Django view to get dealer list"}

In the previous lab, you would have created a cloud function service called `dealer-get` to return a list of dealerships.
Next, let's see how to call that `dealer-get` service from the Django app.

Before you learn how to make REST calls in Django, let's create a dealer model in `models.py` to 
represent and store a dealer entity.

- Open `/models.py`, add a `CarDealer` class. Note that this is a plain Python class instead of a subclass
of Django model.
 

An instance of `CarDealer` is used as a plain data object for storing a dealer object returned from
`dealer-get` service:

```python
class CarDealer:

    def __init__(self, address, city, full_name, id, lat, long, short_name, st, zip):
        # Dealer address
        self.address = address
        # Dealer city
        self.city = city
        # Dealer Full Name
        self.full_name = full_name
        # Dealer id
        self.id = id
        # Location lat
        self.lat = lat
        # Location long
        self.long = long
        # Dealer short name
        self.short_name = short_name
        # Dealer state
        self.st = st
        # Dealer zip
        self.zip = zip

    def __str__(self):
        return "Dealer name: " + self.full_name

```

The actual instance attributes may be different from the object returned by the service you created. Update them in
above `CarDealer` class accordingly.

Now we can start calling `review-get` cloud function service and load the JSON results into a list of `CarDealer` objects.

There are many ways to make HTTP requests in Django. 
Here we use a very popular and easy-to-use Python library called `requests`.

- Create a new Python file called `restapis.py` under `djangoapp/` folder and 
add a sample `get_request` method:

```python
import requests
import json
from .models import CarDealer
from requests.auth import HTTPBasicAuth

def get_request(url, **kwargs):
    print(kwargs)
    print("GET from {} ".format(url))
    try:
        # Call get method of requests library with URL and parameters
        response = requests.get(url, headers={'Content-Type': 'application/json'},
                                    params=kwargs)
    except:
        # If any error occurs
        print("Network exception occurred")
    status_code = response.status_code
    print("With status {} ".format(status_code))
    json_data = json.loads(response.text)
    return json_data

```

The `get_request` method has two arguments, the URL to be requested, and a Python keyword arguments representing
all URL parameters to be associated with the get call.

The `requests.get(url, headers={'Content-Type': 'application/json'},
                                    params=kwargs)` calls a `GET` method in `requests` library with a URL and any URL 
                                    parameters such as `dealerId` or `state`. 

                                    

The content of the response will be a JSON object to be consumed by other methods such as a Django view.

Next, let's parse the dealership JSON result returned by the `get_request` call.

- Create a `get_dealers_from_cf` method to call `get_request` and parse its JSON result. 
One example method may look like the following:

```python
def get_dealers_from_cf(url, **kwargs):
    results = []
    # Call get_request with a URL parameter
    json_result = get_request(url)
    if json_result:
        # Get the row list in JSON as dealers
        dealers = json_result["rows"]
        # For each dealer object
        for dealer in dealers:
            # Get its content in `doc` object
            dealer_doc = dealer["doc"]
            # Create a CarDealer object with values in `doc` object
            dealer_obj = CarDealer(address=dealer_doc["address"], city=dealer_doc["city"], full_name=dealer_doc["full_name"],
                                   id=dealer_doc["id"], lat=dealer_doc["lat"], long=dealer_doc["long"],
                                   short_name=dealer_doc["short_name"],
                                   st=dealer_doc["st"], zip=dealer_doc["zip"])
            results.append(dealer_obj)

    return results

```

You can see parsing JSON in Python is very similar to accessing data with Python dictionary (key-value pair). 
You just need to get values from keys. A value could be an object or a collection of objects such as list or dictionary.

Next, let's create a Django view to call `get_dealers_from_cf` and return the result as a HTTPResponse to browser.

- Find the `get_dealerships` view method in `djangoapp/views.py`, update the method with following:

```python
def get_dealerships(request):
    if request.method == "GET":
        url = "your-cloud-function-domain/dealerships/dealer-get"
        # Get dealers from the URL
        dealerships = get_dealers_from_cf(url)
        # Concat all dealer's short name
        dealer_names = ' '.join([dealer.short_name for dealer in dealerships])
        # Return a list of dealer short name
        return HttpResponse(dealer_names)
```

- Configure the route for `get_dealerships` view method in `url.py`:

```python
from django.urls import path
from django.conf.urls.static import static
from django.conf import settings
from . import views

app_name = 'djangoapp'
urlpatterns = [
    # route is a string contains a URL pattern
    # view refers to the view function
    # name the URL
    path(route='', view=views.get_dealerships, name='index')
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
```

- Test the `get_dealerships` view in Theia

To do this, click on the Skills Network button on the right, it will open the "Skills Network Toolbox". Then click `OTHER` then `Launch Application`. From there you should be able to enter the port as `8000` and launch the development server.

&lt;img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-CD0321EN-SkillsNetwork/labs/module_3_backend_services/images/Launch_Application.png" width="80%" style="border: solid 1px grey"&gt;

- Go to `https://userid-8000.theiadocker-1.proxy.cognitiveclass.ai/djangoapp`. 
You should see a list of dealership names.

More details about how to create Django view and configure URL can be found in this lab:

&lt;a href="https://cocl.us/1K9kO" target="_blank"&gt;Views and templates&lt;/a&gt;

You will find more detailed references about `requests` package at the end of this lab.

Coding practice: create a `get_dealer_by_id` or `get_dealers_by_state` method in `restapis.py`.
HINT, the only difference from the `get_dealers_from_cf` method is adding a dealer id or state URL parameter argument when 
calling the `def get_request(url, **kwargs):` method such as `get_request(url, dealerId=dealerId)`.

::page{title="Create a Django `get_dealer_details` view to get reviews of a dealer"}

By now, you should understand how to call a cloud function using `requests` library in Django and 
convert the JSON results into Python objects. 

Next, let's create another `get` call to the `revew-get` cloud function to get reviews for a dealer.

- Define a `DealerReview` class in `models.py`, it may contain the following attributes:
    - dealership
    - name
    - purchase
    - review
    - purchase_date
    - car_make
    - car_model
    - car_year
    - sentiment
    - id

The value of `sentiment` attribute will be determined by Watson NLU service. It could be `positive`, `neutral`, or `negative`.
You will make a Watson NLU call in the next step.

- Create a `get_dealer_reviews_from_cf` method in `restapis.py`. It makes a `get_request(url, dealerId=dealer_id)` method call
to get all reviews by dealer's id. Then it converts the JSON result into a list of `DealerReview` objects.

- Define a `def get_dealer_details(request, dealer_id):` view method in `views.py` to 
call `get_dealer_reviews_from_cf` method in `restapis.py`, 
and append a list of reviews to context and return a `HttpResponse`, similar to the dealer names in previous step.

Here we need to define `dealer_id` argument to specify which dealer you want to get reviews from.

- Configure the route for `get_dealer_details` view in `url.py`. 
For example, `path('dealer/&lt;int:dealer_id&gt;/', views.get_dealer_details, name='dealer_details'),`.

- Test the `get_dealer_details` view in Theia by launching the application with the development server on port `8000` as done earlier.
You should see a list of reviews for a specific dealer.

::page{title="Update the `get_dealer_reviews_from_cf` view to call Watson NLU for analyzing the sentiment/tone for each review"}

Now that you get a list of reviews for a dealer, you could use Watson NLU to analyze their sentiment/tone.
Since Watson NLU is not public, you will need to add authentication argument to `requests.get()` method.

- Open `restapis.py`, update `get_request(url, **kwargs)` by providing an `auth` argument 
with an API key you created in IBM Watson NLU.

```
requests.get(url, params=params, headers={'Content-Type': 'application/json'},
                                    auth=HTTPBasicAuth('apikey', api_key))
```

You may use a `if` statement to check if `api_key` was provided and call `requests.get()` differently.

```
 if api_key:
   # Basic authentication GET
   request.get(url, params=params, auth=, ...)
 else:
   # no authentication GET
   request.get(url, params=params)
```

- In `restapis.py` file, create a new `analyze_review_sentiments(dealerreview)`.
 

In the method, make a call to the updated `get_request(url, **kwargs)` method with following parameters:

```python
...
  params = dict()
  params["text"] = kwargs["text"]
  params["version"] = kwargs["version"]
  params["features"] = kwargs["features"]
  params["return_analyzed_text"] = kwargs["return_analyzed_text"]
  response = requests.get(url, params=params, headers={'Content-Type': 'application/json'},
                                    auth=HTTPBasicAuth('apikey', api_key))
...
```

You can find more detailed references about Watson NLU text analysis at the end of this lab.

- In `restapis.py` file, update `get_dealer_reviews_from_cf` method by assigning the Watson NLU result 
to the `sentiment` attribute of a `DealerReview` object:

```
...
review_obj.sentiment = analyze_review_sentiments(review_obj.review)
```

- Update `get_dealer_details` view to also print sentiment for each review:

- Test the updated `get_dealer_details` view in Theia by launching the application with the development server on port `8000` as done earlier.

::page{title="Create a `add_review` Django view to post a dealer review"}

By now you have learned how to make various GET calls. 

Next, you will be creating a POST call to the `review-post` cloud function to add a review to a specific dealer.

- Open `restapis.py`, create a new `post_request(url, json_payload, **kwargs):` method. 
The key statement in this method is calling `post` method in `requests` package.

For example, `requests.post(url, params=kwargs, json=json_payload)`.

The key difference from the `get()` method is you need to add a `json` argument with a Python dictionary-like object as request body.

- Open `views.py`, create a new `def add_review(request, dealer_id):` method to handle review post request.

- In the `add_review` view method:
    - First check if user is authenticated because only authenticated users can post reviews for a dealer.
    - Create a dictionary object called `review` to append keys like 
    (`time`, `name`, `dealership`, `review`, `purchase`) and
    any attributes you defined in your `review-post` cloud function.
    
    For example:
    ```
    review["time"] = datetime.utcnow().isoformat()
    review["dealership"] = 11
    review["review"] = "This is a great car dealer"
    ```
  
    - Create another dictionary object called `json_payload` with one key called `review`. Like
    `json_payload["review"] = review`. The `json_payload` will be used as the request body.
    - Call the `post_request` method with the payload 
    
    `post_request(url, json_payload, dealerId=dealer_id)`.
    
    - Return the result of `post_request` to `add_review` view method. You may print the post response
    in console or append it to HTTPResponse and render it on browser.

- Configure the route for `add_review` view in `url.py`.
 

For example, `path('dealer/&lt;int:dealer_id&gt;/', views.get_dealer_details, name='dealer_details')`.

- Test the `add_review` view in Theia. So when you make an add review post request, the `add_view`
method will create a JSON payload contains a review object and post it to your `review-post` cloud function action.

::page{title="Commit your updated project to GitHub"}

Commit all updates to the GitHub repository you created so that you can save your work.

If you need to refresh your memory on how to commit and push to GitHub in Theia lab environment, please refer to this lab [Working with git in the Theia lab environment](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-CD0101EN-SkillsNetwork/labs/GitHubLabs/Github_commit.md.html)

::page{title="External References"}

- &lt;a href="https://requests.readthedocs.io/en/latest/api/?utm_medium=Exinfluencer&amp;utm_source=Exinfluencer&amp;utm_content=000026UJ&amp;utm_term=10006555&amp;utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMCD0321ENSkillsNetwork1046-2022-01-01#main-interface" target="_blank"&gt;Requests Developer Interface&lt;/a&gt;

- &lt;a href="https://cloud.ibm.com/apidocs/natural-language-understanding?utm_medium=Exinfluencer&amp;utm_source=Exinfluencer&amp;utm_content=000026UJ&amp;utm_term=10006555&amp;utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMCD0321ENSkillsNetwork1046-2022-01-01#analyzeget" target="_blank"&gt;Watson NLU API Reference&lt;/a&gt;

::page{title="Summary"}

In this lab, you have learned how to create proxy services to call the cloud functions in Django, 
convert their JSON results into Python objects such as `CarDealer` or `DealerReview`, and return the objects as a HTTPResonse. 

In the next lab, you will create Django templates to present those objects.

## Author(s)

&lt;h4&gt; Yan Luo &lt;h4/&gt;

### Other Contributor(s) 

Upkar Lidder

Priya

## Changelog

| Date | Version | Changed by | Change Description |
|------|--------|--------|---------|
| 2021-02-22 | 1.0 | Yan Luo | Created new instructions for Capstone project |
| 2022-09-01 | 1.1 | K Sundararajan | Updated `Launch Application` instructions as per the new Theia IDE |
| 2022-09-20 | 1.2 | K Sundararajan | Updated pip (packages installation) command |

## &lt;h3 align="center"&gt; © IBM Corporation 2021. All rights reserved. &lt;h3/&gt;

</textarea><div class="CodeMirror cm-s-pastel-on-dark CodeMirror-wrap" translate="no" style="font-size: 13px; width: 1280.67px; height: 601px; margin-top: 0px; display: none;"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 4px; left: 64px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" disabled="" readonly="" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 52px; margin-bottom: -7px; border-right-width: 43px; min-height: 8156px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>381</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 12px; top: 0px; height: 22.3958px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -52px; width: 52px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Create Django Proxy Services Of Cloud Functions"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">img</span> <span class="cm-attribute">src</span>=<span class="cm-string">"</span><span class="cm-string cm-link">https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-CD0321EN-SkillsNetwork/images/IDSN-logo.png</span><span class="cm-string">"</span> <span class="cm-attribute">width</span>=<span class="cm-string">"200"</span> <span class="cm-attribute">alt</span>=<span class="cm-string">"cognitiveclass.ai logo"</span><span class="cm-tag cm-bracket">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">5</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-header cm-header-2">##</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-strong">**Estimated time needed:**</span> 150 minutes</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">In previous labs, you created car model and car make Django models residing in a local SQLite repository.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You also created dealer and review models in a remote Cloudant repository (served by IBM Cloud Function actions).<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Now, you need to integrate those models and services to manage all entities such as dealers, reviews, and cars, and<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">present the results in Django templates.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">To integrate external dealer and review data, you need to call the cloud function APIs from the Django app and<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">process the API results in Django views. Such Django views can be seen as proxy services to the end user because</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">they fetch data from external resources per users' requests.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">In this lab, you will create such Django views as proxy services.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Environment setup"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">23</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">If your Theia workspace has been reset and you want to continue from what you have done previously,<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">24</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">please <span class="cm-comment">`git clone`</span> or pull from your created GitHub repository.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">25</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">26</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Set up the Python runtime if Theia workspace has been reset.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">27</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">28</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">29</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">python3 -m pip install -U -r requirements.txt</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">30</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">31</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">32</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Note: You may need to perform models migrations for a new Theia environment.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">33</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">34</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Create a <span class="cm-comment">`get_dealerships`</span> Django view to get dealer list"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">35</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">36</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">In the previous lab, you would have created a cloud function service called <span class="cm-comment">`dealer-get`</span> to return a list of dealerships.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">37</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Next, let's see how to call that <span class="cm-comment">`dealer-get`</span> service from the Django app.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">38</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">39</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Before you learn how to make REST calls in Django, let's create a dealer model in <span class="cm-comment">`models.py`</span> to<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">40</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">represent and store a dealer entity.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">41</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">42</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Open </span><span class="cm-comment cm-variable-2">`/models.py`</span><span class="cm-variable-2">, add a </span><span class="cm-comment cm-variable-2">`CarDealer`</span><span class="cm-variable-2"> class. Note that this is a plain Python class instead of a subclass</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">43</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">of Django model.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">44</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">45</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">46</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">An instance of <span class="cm-comment">`CarDealer`</span> is used as a plain data object for storing a dealer object returned from</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">47</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">`dealer-get`</span> service:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">48</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">49</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```python</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">50</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">CarDealer</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">51</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">52</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">__init__</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">address</span>, <span class="cm-variable">city</span>, <span class="cm-variable">full_name</span>, <span class="cm-builtin">id</span>, <span class="cm-variable">lat</span>, <span class="cm-variable">long</span>, <span class="cm-variable">short_name</span>, <span class="cm-variable">st</span>, <span class="cm-builtin">zip</span>):</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">53</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer address</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">54</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">address</span> <span class="cm-operator">=</span> <span class="cm-variable">address</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">55</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer city</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">56</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">city</span> <span class="cm-operator">=</span> <span class="cm-variable">city</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">57</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer Full Name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">58</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">full_name</span> <span class="cm-operator">=</span> <span class="cm-variable">full_name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">59</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer id</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">60</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">id</span> <span class="cm-operator">=</span> <span class="cm-builtin">id</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">61</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Location lat</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">62</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">lat</span> <span class="cm-operator">=</span> <span class="cm-variable">lat</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">63</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Location long</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">64</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">long</span> <span class="cm-operator">=</span> <span class="cm-variable">long</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">65</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer short name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">66</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">short_name</span> <span class="cm-operator">=</span> <span class="cm-variable">short_name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">67</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer state</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">68</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">st</span> <span class="cm-operator">=</span> <span class="cm-variable">st</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">69</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Dealer zip</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">70</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">zip</span> <span class="cm-operator">=</span> <span class="cm-builtin">zip</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">71</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">72</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">__str__</span>(<span class="cm-variable-2">self</span>):</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">73</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-string">"Dealer name: "</span> <span class="cm-operator">+</span> <span class="cm-variable-2">self</span>.<span class="cm-property">full_name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">74</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">75</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">76</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">77</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The actual instance attributes may be different from the object returned by the service you created. Update them in</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">78</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">above <span class="cm-comment">`CarDealer`</span> class accordingly.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">79</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">80</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Now we can start calling <span class="cm-comment">`review-get`</span> cloud function service and load the JSON results into a list of <span class="cm-comment">`CarDealer`</span> objects.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">81</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">82</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">There are many ways to make HTTP requests in Django.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">83</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Here we use a very popular and easy-to-use Python library called <span class="cm-comment">`requests`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">84</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">85</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Create a new Python file called </span><span class="cm-comment cm-variable-2">`restapis.py`</span><span class="cm-variable-2"> under </span><span class="cm-comment cm-variable-2">`djangoapp/`</span><span class="cm-variable-2"> folder and</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">86</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">add a sample <span class="cm-comment">`get_request`</span> method:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">87</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">88</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```python</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">89</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">requests</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">90</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">json</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">91</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">from</span> .<span class="cm-property">models</span> <span class="cm-keyword">import</span> <span class="cm-variable">CarDealer</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">92</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">requests</span>.<span class="cm-property">auth</span> <span class="cm-keyword">import</span> <span class="cm-variable">HTTPBasicAuth</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">93</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">94</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_request</span>(<span class="cm-variable">url</span>, <span class="cm-operator">**</span><span class="cm-variable">kwargs</span>):</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">95</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-builtin">print</span>(<span class="cm-variable">kwargs</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">96</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-builtin">print</span>(<span class="cm-string">"GET from {} "</span>.<span class="cm-property">format</span>(<span class="cm-variable">url</span>))</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">97</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">try</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">98</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Call get method of requests library with URL and parameters</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">99</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">response</span> <span class="cm-operator">=</span> <span class="cm-variable">requests</span>.<span class="cm-property">get</span>(<span class="cm-variable">url</span>, <span class="cm-variable">headers</span><span class="cm-operator">=</span>{<span class="cm-string">'Content-Type'</span>: <span class="cm-string">'application/json'</span>},</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">100</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">params</span><span class="cm-operator">=</span><span class="cm-variable">kwargs</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">101</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">except</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">102</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># If any error occurs</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">103</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-builtin">print</span>(<span class="cm-string">"Network exception occurred"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">104</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">status_code</span> <span class="cm-operator">=</span> <span class="cm-variable">response</span>.<span class="cm-property">status_code</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">105</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-builtin">print</span>(<span class="cm-string">"With status {} "</span>.<span class="cm-property">format</span>(<span class="cm-variable">status_code</span>))</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">106</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">json_data</span> <span class="cm-operator">=</span> <span class="cm-variable">json</span>.<span class="cm-property">loads</span>(<span class="cm-variable">response</span>.<span class="cm-property">text</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">107</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">json_data</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">108</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">109</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">110</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">111</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The <span class="cm-comment">`get_request`</span> method has two arguments, the URL to be requested, and a Python keyword arguments representing</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">112</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">all URL parameters to be associated with the get call.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">113</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">114</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The <span class="cm-comment">`requests.get(url, headers={'Content-Type': 'application/json'},</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">115</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">params=kwargs)`</span> calls a <span class="cm-comment">`GET`</span> method in <span class="cm-comment">`requests`</span> library with a URL and any URL<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">116</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  parameters such as <span class="cm-comment">`dealerId`</span> or <span class="cm-comment">`state`</span>.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">117</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">118</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">119</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">120</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The content of the response will be a JSON object to be consumed by other methods such as a Django view.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">121</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">122</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Next, let's parse the dealership JSON result returned by the <span class="cm-comment">`get_request`</span> call.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">123</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">124</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Create a </span><span class="cm-comment cm-variable-2">`get_dealers_from_cf`</span><span class="cm-variable-2"> method to call </span><span class="cm-comment cm-variable-2">`get_request`</span><span class="cm-variable-2"> and parse its JSON result.</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">125</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">One example method may look like the following:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">126</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">127</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```python</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">128</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_dealers_from_cf</span>(<span class="cm-variable">url</span>, <span class="cm-operator">**</span><span class="cm-variable">kwargs</span>):</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">129</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">results</span> <span class="cm-operator">=</span> []</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">130</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># Call get_request with a URL parameter</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">131</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">json_result</span> <span class="cm-operator">=</span> <span class="cm-variable">get_request</span>(<span class="cm-variable">url</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">132</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">json_result</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">133</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Get the row list in JSON as dealers</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">134</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dealers</span> <span class="cm-operator">=</span> <span class="cm-variable">json_result</span>[<span class="cm-string">"rows"</span>]</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">135</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># For each dealer object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">136</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">dealer</span> <span class="cm-keyword">in</span> <span class="cm-variable">dealers</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">137</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Get its content in `doc` object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">138</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dealer_doc</span> <span class="cm-operator">=</span> <span class="cm-variable">dealer</span>[<span class="cm-string">"doc"</span>]</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">139</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Create a CarDealer object with values in `doc` object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">140</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dealer_obj</span> <span class="cm-operator">=</span> <span class="cm-variable">CarDealer</span>(<span class="cm-variable">address</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"address"</span>], <span class="cm-variable">city</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"city"</span>], <span class="cm-variable">full_name</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"full_name"</span>],</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">141</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-builtin">id</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"id"</span>], <span class="cm-variable">lat</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"lat"</span>], <span class="cm-variable">long</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"long"</span>],</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">142</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-variable">short_name</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"short_name"</span>],</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">143</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-variable">st</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"st"</span>], <span class="cm-builtin">zip</span><span class="cm-operator">=</span><span class="cm-variable">dealer_doc</span>[<span class="cm-string">"zip"</span>])</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">144</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">results</span>.<span class="cm-property">append</span>(<span class="cm-variable">dealer_obj</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">145</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">146</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">results</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">147</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">148</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">149</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">150</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You can see parsing JSON in Python is very similar to accessing data with Python dictionary (key-value pair).<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">151</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You just need to get values from keys. A value could be an object or a collection of objects such as list or dictionary.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">152</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">153</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Next, let's create a Django view to call <span class="cm-comment">`get_dealers_from_cf`</span> and return the result as a HTTPResponse to browser.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">154</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">155</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Find the </span><span class="cm-comment cm-variable-2">`get_dealerships`</span><span class="cm-variable-2"> view method in </span><span class="cm-comment cm-variable-2">`djangoapp/views.py`</span><span class="cm-variable-2">, update the method with following:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">156</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">157</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```python</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">158</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_dealerships</span>(<span class="cm-variable">request</span>):</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">159</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">request</span>.<span class="cm-property">method</span> <span class="cm-operator">==</span> <span class="cm-string">"GET"</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">160</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">url</span> <span class="cm-operator">=</span> <span class="cm-string">"your-cloud-function-domain/dealerships/dealer-get"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">161</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Get dealers from the URL</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">162</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dealerships</span> <span class="cm-operator">=</span> <span class="cm-variable">get_dealers_from_cf</span>(<span class="cm-variable">url</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">163</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Concat all dealer's short name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">164</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dealer_names</span> <span class="cm-operator">=</span> <span class="cm-string">' '</span>.<span class="cm-property">join</span>([<span class="cm-variable">dealer</span>.<span class="cm-property">short_name</span> <span class="cm-keyword">for</span> <span class="cm-variable">dealer</span> <span class="cm-keyword">in</span> <span class="cm-variable">dealerships</span>])</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">165</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># Return a list of dealer short name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">166</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">HttpResponse</span>(<span class="cm-variable">dealer_names</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">167</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">168</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">169</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Configure the route for </span><span class="cm-comment cm-variable-2">`get_dealerships`</span><span class="cm-variable-2"> view method in </span><span class="cm-comment cm-variable-2">`url.py`</span><span class="cm-variable-2">:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">170</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">171</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```python</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">172</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">django</span>.<span class="cm-property">urls</span> <span class="cm-keyword">import</span> <span class="cm-variable">path</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">173</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">django</span>.<span class="cm-property">conf</span>.<span class="cm-property">urls</span>.<span class="cm-property">static</span> <span class="cm-keyword">import</span> <span class="cm-variable">static</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">174</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">django</span>.<span class="cm-property">conf</span> <span class="cm-keyword">import</span> <span class="cm-variable">settings</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">175</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">from</span> . <span class="cm-property">import</span> <span class="cm-variable">views</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">176</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">177</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">app_name</span> <span class="cm-operator">=</span> <span class="cm-string">'djangoapp'</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">178</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">urlpatterns</span> <span class="cm-operator">=</span> [</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">179</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># route is a string contains a URL pattern</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">180</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># view refers to the view function</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">181</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># name the URL</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">182</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">path</span>(<span class="cm-variable">route</span><span class="cm-operator">=</span><span class="cm-string">''</span>, <span class="cm-variable">view</span><span class="cm-operator">=</span><span class="cm-variable">views</span>.<span class="cm-property">get_dealerships</span>, <span class="cm-variable">name</span><span class="cm-operator">=</span><span class="cm-string">'index'</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">183</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">] <span class="cm-operator">+</span> <span class="cm-variable">static</span>(<span class="cm-variable">settings</span>.<span class="cm-property">MEDIA_URL</span>, <span class="cm-variable">document_root</span><span class="cm-operator">=</span><span class="cm-variable">settings</span>.<span class="cm-property">MEDIA_ROOT</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">184</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">185</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">186</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Test the </span><span class="cm-comment cm-variable-2">`get_dealerships`</span><span class="cm-variable-2"> view in Theia</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">187</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">188</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">To do this, click on the Skills Network button on the right, it will open the "Skills Network Toolbox". Then click <span class="cm-comment">`OTHER`</span> then <span class="cm-comment">`Launch Application`</span>. From there you should be able to enter the port as <span class="cm-comment">`8000`</span> and launch the development server.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">189</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">190</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">img</span> <span class="cm-attribute">src</span>=<span class="cm-string">"</span><span class="cm-string cm-link">https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-CD0321EN-SkillsNetwork/labs/module_3_backend_services/images/Launch_Application.png</span><span class="cm-string">"</span> <span class="cm-attribute">width</span>=<span class="cm-string">"80%"</span> <span class="cm-attribute">style</span>=<span class="cm-string">"border: solid 1px grey"</span><span class="cm-tag cm-bracket">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">191</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">192</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Go to </span><span class="cm-comment cm-variable-2">`https://userid-8000.theiadocker-1.proxy.cognitiveclass.ai/djangoapp`</span><span class="cm-variable-2">.</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">193</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You should see a list of dealership names.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">194</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">195</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">More details about how to create Django view and configure URL can be found in this lab:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">196</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">197</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">a</span> <span class="cm-attribute">href</span>=<span class="cm-string">"</span><span class="cm-string cm-link">https://cocl.us/1K9kO</span><span class="cm-string">"</span> <span class="cm-attribute">target</span>=<span class="cm-string">"_blank"</span><span class="cm-tag cm-bracket">&gt;</span>Views and templates<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">a</span><span class="cm-tag cm-bracket">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">198</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">199</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You will find more detailed references about <span class="cm-comment">`requests`</span> package at the end of this lab.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">200</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">201</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Coding practice: create a <span class="cm-comment">`get_dealer_by_id`</span> or <span class="cm-comment">`get_dealers_by_state`</span> method in <span class="cm-comment">`restapis.py`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">202</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">HINT, the only difference from the <span class="cm-comment">`get_dealers_from_cf`</span> method is adding a dealer id or state URL parameter argument when<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">203</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">calling the <span class="cm-comment">`def get_request(url, **kwargs):`</span> method such as <span class="cm-comment">`get_request(url, dealerId=dealerId)`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">204</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">205</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Create a Django <span class="cm-comment">`get_dealer_details`</span> view to get reviews of a dealer"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">206</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">207</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">By now, you should understand how to call a cloud function using <span class="cm-comment">`requests`</span> library in Django and<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">208</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">convert the JSON results into Python objects.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">209</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">210</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Next, let's create another <span class="cm-comment">`get`</span> call to the <span class="cm-comment">`revew-get`</span> cloud function to get reviews for a dealer.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">211</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">212</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Define a </span><span class="cm-comment cm-variable-2">`DealerReview`</span><span class="cm-variable-2"> class in </span><span class="cm-comment cm-variable-2">`models.py`</span><span class="cm-variable-2">, it may contain the following attributes:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">213</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- dealership</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">214</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- name</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">215</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- purchase</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">216</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- review</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">217</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- purchase_date</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">218</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- car_make</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">219</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- car_model</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">220</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- car_year</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">221</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- sentiment</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">222</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- id</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">223</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">224</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The value of <span class="cm-comment">`sentiment`</span> attribute will be determined by Watson NLU service. It could be <span class="cm-comment">`positive`</span>, <span class="cm-comment">`neutral`</span>, or <span class="cm-comment">`negative`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">225</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You will make a Watson NLU call in the next step.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">226</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">227</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Create a </span><span class="cm-comment cm-variable-2">`get_dealer_reviews_from_cf`</span><span class="cm-variable-2"> method in </span><span class="cm-comment cm-variable-2">`restapis.py`</span><span class="cm-variable-2">. It makes a </span><span class="cm-comment cm-variable-2">`get_request(url, dealerId=dealer_id)`</span><span class="cm-variable-2"> method call</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">228</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">to get all reviews by dealer's id. Then it converts the JSON result into a list of <span class="cm-comment">`DealerReview`</span> objects.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">229</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">230</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Define a </span><span class="cm-comment cm-variable-2">`def get_dealer_details(request, dealer_id):`</span><span class="cm-variable-2"> view method in </span><span class="cm-comment cm-variable-2">`views.py`</span><span class="cm-variable-2"> to</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">231</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">call <span class="cm-comment">`get_dealer_reviews_from_cf`</span> method in <span class="cm-comment">`restapis.py`</span>,<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">232</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">and append a list of reviews to context and return a <span class="cm-comment">`HttpResponse`</span>, similar to the dealer names in previous step.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">233</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">234</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Here we need to define <span class="cm-comment">`dealer_id`</span> argument to specify which dealer you want to get reviews from.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">235</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">236</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Configure the route for </span><span class="cm-comment cm-variable-2">`get_dealer_details`</span><span class="cm-variable-2"> view in </span><span class="cm-comment cm-variable-2">`url.py`</span><span class="cm-variable-2">.</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">237</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">For example, <span class="cm-comment">`path('dealer/&lt;int:dealer_id&gt;/', views.get_dealer_details, name='dealer_details'),`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">238</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">239</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Test the </span><span class="cm-comment cm-variable-2">`get_dealer_details`</span><span class="cm-variable-2"> view in Theia by launching the application with the development server on port </span><span class="cm-comment cm-variable-2">`8000`</span><span class="cm-variable-2"> as done earlier.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">240</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You should see a list of reviews for a specific dealer.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">241</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">242</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Update the <span class="cm-comment">`get_dealer_reviews_from_cf`</span> view to call Watson NLU for analyzing the sentiment/tone for each review"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">243</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">244</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Now that you get a list of reviews for a dealer, you could use Watson NLU to analyze their sentiment/tone.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">245</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Since Watson NLU is not public, you will need to add authentication argument to <span class="cm-comment">`requests.get()`</span> method.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">246</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">247</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Open </span><span class="cm-comment cm-variable-2">`restapis.py`</span><span class="cm-variable-2">, update </span><span class="cm-comment cm-variable-2">`get_request(url, **kwargs)`</span><span class="cm-variable-2"> by providing an </span><span class="cm-comment cm-variable-2">`auth`</span><span class="cm-variable-2"> argument</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">248</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">with an API key you created in IBM Watson NLU.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">249</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">250</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">251</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">requests.get(url, params=params, headers={'Content-Type': 'application/json'},</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">252</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">auth=HTTPBasicAuth('apikey', api_key))</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">253</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">254</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">255</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You may use a <span class="cm-comment">`if`</span> statement to check if <span class="cm-comment">`api_key`</span> was provided and call <span class="cm-comment">`requests.get()`</span> differently.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">256</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">257</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">258</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-comment">if api_key:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">259</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; <span class="cm-comment"># Basic authentication GET</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">260</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; <span class="cm-comment">request.get(url, params=params, auth=, ...)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">261</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-comment">else:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">262</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; <span class="cm-comment"># no authentication GET</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">263</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; <span class="cm-comment">request.get(url, params=params)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">264</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">265</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">266</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- In </span><span class="cm-comment cm-variable-2">`restapis.py`</span><span class="cm-variable-2"> file, create a new </span><span class="cm-comment cm-variable-2">`analyze_review_sentiments(dealerreview)`</span><span class="cm-variable-2">.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">267</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">268</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">269</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">In the method, make a call to the updated <span class="cm-comment">`get_request(url, **kwargs)`</span> method with following parameters:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">270</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">271</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```python</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">272</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-operator">...</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">273</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">params</span> <span class="cm-operator">=</span> <span class="cm-builtin">dict</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">274</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable cm-error">params</span>[<span class="cm-string">"text"</span>] <span class="cm-operator">=</span> <span class="cm-variable">kwargs</span>[<span class="cm-string">"text"</span>]</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">275</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">params</span>[<span class="cm-string">"version"</span>] <span class="cm-operator">=</span> <span class="cm-variable">kwargs</span>[<span class="cm-string">"version"</span>]</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">276</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable cm-error">params</span>[<span class="cm-string">"features"</span>] <span class="cm-operator">=</span> <span class="cm-variable">kwargs</span>[<span class="cm-string">"features"</span>]</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">277</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">params</span>[<span class="cm-string">"return_analyzed_text"</span>] <span class="cm-operator">=</span> <span class="cm-variable">kwargs</span>[<span class="cm-string">"return_analyzed_text"</span>]</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">278</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable cm-error">response</span> <span class="cm-operator">=</span> <span class="cm-variable">requests</span>.<span class="cm-property">get</span>(<span class="cm-variable">url</span>, <span class="cm-variable">params</span><span class="cm-operator">=</span><span class="cm-variable">params</span>, <span class="cm-variable">headers</span><span class="cm-operator">=</span>{<span class="cm-string">'Content-Type'</span>: <span class="cm-string">'application/json'</span>},</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">279</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">auth</span><span class="cm-operator">=</span><span class="cm-variable">HTTPBasicAuth</span>(<span class="cm-string">'apikey'</span>, <span class="cm-variable">api_key</span>))</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">280</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-operator">...</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">281</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">282</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">283</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">You can find more detailed references about Watson NLU text analysis at the end of this lab.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">284</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">285</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- In </span><span class="cm-comment cm-variable-2">`restapis.py`</span><span class="cm-variable-2"> file, update </span><span class="cm-comment cm-variable-2">`get_dealer_reviews_from_cf`</span><span class="cm-variable-2"> method by assigning the Watson NLU result</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">286</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">to the <span class="cm-comment">`sentiment`</span> attribute of a <span class="cm-comment">`DealerReview`</span> object:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">287</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">288</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">289</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">...</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">290</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">review_obj.sentiment = analyze_review_sentiments(review_obj.review)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">291</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">292</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">293</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Update </span><span class="cm-comment cm-variable-2">`get_dealer_details`</span><span class="cm-variable-2"> view to also print sentiment for each review:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">294</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">295</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Test the updated </span><span class="cm-comment cm-variable-2">`get_dealer_details`</span><span class="cm-variable-2"> view in Theia by launching the application with the development server on port </span><span class="cm-comment cm-variable-2">`8000`</span><span class="cm-variable-2"> as done earlier.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">296</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">297</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Create a <span class="cm-comment">`add_review`</span> Django view to post a dealer review"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">298</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">299</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">By now you have learned how to make various GET calls.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">300</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">301</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Next, you will be creating a POST call to the <span class="cm-comment">`review-post`</span> cloud function to add a review to a specific dealer.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">302</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">303</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Open </span><span class="cm-comment cm-variable-2">`restapis.py`</span><span class="cm-variable-2">, create a new </span><span class="cm-comment cm-variable-2">`post_request(url, json_payload, **kwargs):`</span><span class="cm-variable-2"> method.</span><span class="cm-variable-2 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">304</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The key statement in this method is calling <span class="cm-comment">`post`</span> method in <span class="cm-comment">`requests`</span> package.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">305</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">306</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">For example, <span class="cm-comment">`requests.post(url, params=kwargs, json=json_payload)`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">307</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">308</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">The key difference from the <span class="cm-comment">`get()`</span> method is you need to add a <span class="cm-comment">`json`</span> argument with a Python dictionary-like object as request body.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">309</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">310</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Open </span><span class="cm-comment cm-variable-2">`views.py`</span><span class="cm-variable-2">, create a new </span><span class="cm-comment cm-variable-2">`def add_review(request, dealer_id):`</span><span class="cm-variable-2"> method to handle review post request.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">311</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">312</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- In the </span><span class="cm-comment cm-variable-2">`add_review`</span><span class="cm-variable-2"> view method:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">313</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- First check if user is authenticated because only authenticated users can post reviews for a dealer.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">314</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- Create a dictionary object called </span><span class="cm-comment cm-variable-3">`review`</span><span class="cm-variable-3"> to append keys like</span><span class="cm-variable-3 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">315</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-2">(</span><span class="cm-comment cm-variable-2">`time`</span><span class="cm-variable-2">, </span><span class="cm-comment cm-variable-2">`name`</span><span class="cm-variable-2">, </span><span class="cm-comment cm-variable-2">`dealership`</span><span class="cm-variable-2">, </span><span class="cm-comment cm-variable-2">`review`</span><span class="cm-variable-2">, </span><span class="cm-comment cm-variable-2">`purchase`</span><span class="cm-variable-2">) and</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">316</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-2">any attributes you defined in your </span><span class="cm-comment cm-variable-2">`review-post`</span><span class="cm-variable-2"> cloud function.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">317</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> &nbsp; &nbsp;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">318</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-2">For example:</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">319</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment cm-variable-2">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">320</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">review["time"] = datetime.utcnow().isoformat()</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">321</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">review["dealership"] = 11</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">322</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">review["review"] = "This is a great car dealer"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">323</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment cm-variable-2">```</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">324</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> &nbsp;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">325</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- Create another dictionary object called </span><span class="cm-comment cm-variable-3">`json_payload`</span><span class="cm-variable-3"> with one key called </span><span class="cm-comment cm-variable-3">`review`</span><span class="cm-variable-3">. Like</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">326</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment cm-variable-2">`json_payload["review"] = review`</span><span class="cm-variable-2">. The </span><span class="cm-comment cm-variable-2">`json_payload`</span><span class="cm-variable-2"> will be used as the request body.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">327</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- Call the </span><span class="cm-comment cm-variable-3">`post_request`</span><span class="cm-variable-3"> method with the payload</span><span class="cm-variable-3 cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">328</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> &nbsp; &nbsp;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">329</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment cm-variable-2">`post_request(url, json_payload, dealerId=dealer_id)`</span><span class="cm-variable-2">.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">330</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> &nbsp; &nbsp;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">331</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- Return the result of </span><span class="cm-comment cm-variable-3">`post_request`</span><span class="cm-variable-3"> to </span><span class="cm-comment cm-variable-3">`add_review`</span><span class="cm-variable-3"> view method. You may print the post response</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">332</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-2">in console or append it to HTTPResponse and render it on browser.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">333</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">334</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Configure the route for </span><span class="cm-comment cm-variable-2">`add_review`</span><span class="cm-variable-2"> view in </span><span class="cm-comment cm-variable-2">`url.py`</span><span class="cm-variable-2">.</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">335</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">336</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">337</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">For example, <span class="cm-comment">`path('dealer/&lt;int:dealer_id&gt;/', views.get_dealer_details, name='dealer_details')`</span>.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">338</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">339</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- Test the </span><span class="cm-comment cm-variable-2">`add_review`</span><span class="cm-variable-2"> view in Theia. So when you make an add review post request, the </span><span class="cm-comment cm-variable-2">`add_view`</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">340</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">method will create a JSON payload contains a review object and post it to your <span class="cm-comment">`review-post`</span> cloud function action.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">341</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">342</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Commit your updated project to GitHub"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">343</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">344</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Commit all updates to the GitHub repository you created so that you can save your work.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">345</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">346</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">If you need to refresh your memory on how to commit and push to GitHub in Theia lab environment, please refer to this lab <span class="cm-link">[Working with git in the Theia lab environment]</span><span class="cm-string cm-url">(https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-CD0101EN-SkillsNetwork/labs/GitHubLabs/Github_commit.md.html)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">347</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">348</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="External References"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">349</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">350</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- </span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">a</span> <span class="cm-attribute">href</span>=<span class="cm-string">"</span><span class="cm-string cm-link">https://requests.readthedocs.io/en/latest/api/?utm_medium=Exinfluencer&amp;utm_source=Exinfluencer&amp;utm_content=000026UJ&amp;utm_term=10006555&amp;utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMCD0321ENSkillsNetwork1046-2022-01-01#main-interface</span><span class="cm-string">"</span> <span class="cm-attribute">target</span>=<span class="cm-string">"_blank"</span><span class="cm-tag cm-bracket">&gt;</span>Requests Developer Interface<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">a</span><span class="cm-tag cm-bracket">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">351</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">352</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-2">- </span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">a</span> <span class="cm-attribute">href</span>=<span class="cm-string">"</span><span class="cm-string cm-link">https://cloud.ibm.com/apidocs/natural-language-understanding?utm_medium=Exinfluencer&amp;utm_source=Exinfluencer&amp;utm_content=000026UJ&amp;utm_term=10006555&amp;utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMCD0321ENSkillsNetwork1046-2022-01-01#analyzeget</span><span class="cm-string">"</span> <span class="cm-attribute">target</span>=<span class="cm-string">"_blank"</span><span class="cm-tag cm-bracket">&gt;</span>Watson NLU API Reference<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">a</span><span class="cm-tag cm-bracket">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">353</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">354</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">::page{title="Summary"}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">355</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">356</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">In this lab, you have learned how to create proxy services to call the cloud functions in Django,<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">357</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">convert their JSON results into Python objects such as <span class="cm-comment">`CarDealer`</span> or <span class="cm-comment">`DealerReview`</span>, and return the objects as a HTTPResonse.<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">358</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">359</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">In the next lab, you will create Django templates to present those objects.</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">360</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 3px; width: 24px;">361</div><div class="CodeMirror-gutter-elt" style="left: 45px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Author(s)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">362</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">363</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">h4</span><span class="cm-tag cm-bracket">&gt;</span> Yan Luo <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">h4</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">364</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">365</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">### Other Contributor(s)<span class="cm-overlay cm-trailingspace"> </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">366</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">367</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Upkar Lidder</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">368</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">369</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">Priya</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">370</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">371</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">## Changelog</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">372</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">373</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">| Date | Version | Changed by | Change Description |</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">374</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">|------|--------|--------|---------|</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">375</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">| 2021-02-22 | 1.0 | Yan Luo | Created new instructions for Capstone project |</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">376</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">| 2022-09-01 | 1.1 | K Sundararajan | Updated `Launch Application` instructions as per the new Theia IDE |</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">377</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">| 2022-09-20 | 1.2 | K Sundararajan | Updated pip (packages installation) command |</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">378</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">379</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">## <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">h3</span> <span class="cm-attribute">align</span>=<span class="cm-string">"center"</span><span class="cm-tag cm-bracket">&gt;</span> © IBM Corporation 2021. All rights reserved. <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">h3</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">380</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" aria-hidden="true" style="left: -52px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">381</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 43px; width: 1px; border-bottom: 0px solid transparent; top: 8156px;"></div><div class="CodeMirror-gutters" style="height: 8199px; left: -1.2517e-06px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 32px;"></div><div class="CodeMirror-gutter CodeMirror-foldgutter"></div></div></div></div>
    

<div class="editormd-preview editormd-preview-theme-dark" style="background: rgb(255, 255, 255); top: 0px; width: 1280px; height: 601px;"><div class="md-header" style="z-index:1;"><div class="toolbar"><button class="toc" style=""><i class="fa fa-bars" aria-hidden="true" style="margin-right: 15px; display: inline;"></i><p>Table of Contents</p></button><div class="tools">
        
        <button class="tool-icon" id="print" title="Print instructions"><i class="fa fa-print" aria-hidden="true"></i></button>
        <button class="tool-icon" id="font-up" title="Increase font size"><i class="fa fa-font" aria-hidden="true"></i><sup>+</sup></button>
        <button class="tool-icon" id="font-down" title="Decrease font size"><i class="fa fa-font" aria-hidden="true"></i><sup>-</sup></button>
    </div></div>         <nav class="instruction-progress-bar" aria-label="pagination">             <div class="instruction-progress-fill" style="width: 567.792px;"></div>             <ul class="pagination"><li class="page-item active"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item active"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item active"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item active"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li><li class="page-item"></li><li class="page-divider" style="background-color: rgb(34, 34, 34);"></li></ul>         </nav></div><div class="table-of-contents"><button class="chapter"><span class="chapter-num">1</span><span class="chapter-title">Create Django Proxy Services Of Cloud Functions</span></button><button class="chapter"><span class="chapter-num">2</span><span class="chapter-title">Environment setup</span></button><button class="chapter"><span class="chapter-num">3</span><span class="chapter-title">Create a <code>get_dealerships</code> Django view to get dealer list</span></button><button class="chapter active"><span class="chapter-num">4</span><span class="chapter-title">Create a Django <code>get_dealer_details</code> view to get reviews of a dealer</span></button><button class="chapter"><span class="chapter-num">5</span><span class="chapter-title">Update the <code>get_dealer_reviews_from_cf</code> view to call Watson NLU for analyzing the sentiment/tone for each review</span></button><button class="chapter"><span class="chapter-num">6</span><span class="chapter-title">Create a <code>add_review</code> Django view to post a dealer review</span></button><button class="chapter"><span class="chapter-num">7</span><span class="chapter-title">Commit your updated project to GitHub</span></button><button class="chapter"><span class="chapter-num">8</span><span class="chapter-title">External References</span></button><button class="chapter"><span class="chapter-num">9</span><span class="chapter-title">Summary</span></button></div><div class="sticky-header" style="z-index: 1; padding-top: 0px; padding-bottom: 0px; height: auto;"></div><div class="markdown-body editormd-preview-container editormd-preview-active" previewcontainer="true" style="height: 100%;"><div class="pages"><div class="page" id="page-1" style="display:none;"><h1 class="pageTitle">Create Django Proxy Services Of Cloud Functions</h1>
<img src="./03.3.Create Django Proxy Services Of Cloud Functions_files/IDSN-logo.png" width="200" alt="cognitiveclass.ai logo">

<h2><span class="header-link octicon octicon-link"></span></h2><p><strong>Estimated time needed:</strong> 150 minutes</p>
<p>In previous labs, you created car model and car make Django models residing in a local SQLite repository.<br>You also created dealer and review models in a remote Cloudant repository (served by IBM Cloud Function actions). </p>
<p>Now, you need to integrate those models and services to manage all entities such as dealers, reviews, and cars, and<br>present the results in Django templates.</p>
<p>To integrate external dealer and review data, you need to call the cloud function APIs from the Django app and<br>process the API results in Django views. Such Django views can be seen as proxy services to the end user because<br>they fetch data from external resources per users’ requests.</p>
<p>In this lab, you will create such Django views as proxy services.</p>
<div class="page-footer"><button class="hidden"></button><button class="next">Next</button></div></div><div class="page" id="page-2" style="display:none;"><h1 class="pageTitle">Environment setup</h1>
<p>If your Theia workspace has been reset and you want to continue from what you have done previously,<br>please <code>git clone</code> or pull from your created GitHub repository. </p>
<ul>
<li>Set up the Python runtime if Theia workspace has been reset.</li></ul>
<pre class="prettyprint linenums prettyprinted" style="padding-right: 42px;"><ol class="formatted-line-numbers"><li>1</li></ol><ol class="linenums"><li class="L0"><code><span class="pln">python3 </span><span class="pun">-</span><span class="pln">m pip install </span><span class="pun">-</span><span class="pln">U </span><span class="pun">-</span><span class="pln">r requirements</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block one-line"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-0">Copied!</span></button></pre>
<p>Note: You may need to perform models migrations for a new Theia environment.</p>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-3" style="display:none;"><h1 class="pageTitle">Create a <code>get_dealerships</code> Django view to get dealer list</h1>
<p>In the previous lab, you would have created a cloud function service called <code>dealer-get</code> to return a list of dealerships.<br>Next, let’s see how to call that <code>dealer-get</code> service from the Django app.</p>
<p>Before you learn how to make REST calls in Django, let’s create a dealer model in <code>models.py</code> to<br>represent and store a dealer entity.</p>
<ul>
<li>Open <code>/models.py</code>, add a <code>CarDealer</code> class. Note that this is a plain Python class instead of a subclass<br>of Django model.</li></ul>
<p>An instance of <code>CarDealer</code> is used as a plain data object for storing a dealer object returned from<br><code>dealer-get</code> service:</p>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li><li>18</li><li>19</li><li>20</li><li>21</li><li>22</li><li>23</li><li>24</li></ol><ol class="linenums"><li class="L0"><code class="language-python"><span class="kwd">class</span><span class="pln"> </span><span class="typ">CarDealer</span><span class="pun">:</span></code></li><li class="L1"><code class="language-python"></code></li><li class="L2"><code class="language-python"><span class="pln">    </span><span class="kwd">def</span><span class="pln"> __init__</span><span class="pun">(</span><span class="pln">self</span><span class="pun">,</span><span class="pln"> address</span><span class="pun">,</span><span class="pln"> city</span><span class="pun">,</span><span class="pln"> full_name</span><span class="pun">,</span><span class="pln"> id</span><span class="pun">,</span><span class="pln"> lat</span><span class="pun">,</span><span class="pln"> long</span><span class="pun">,</span><span class="pln"> short_name</span><span class="pun">,</span><span class="pln"> st</span><span class="pun">,</span><span class="pln"> zip</span><span class="pun">):</span></code></li><li class="L3"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer address</span></code></li><li class="L4"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">address </span><span class="pun">=</span><span class="pln"> address</span></code></li><li class="L5"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer city</span></code></li><li class="L6"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">city </span><span class="pun">=</span><span class="pln"> city</span></code></li><li class="L7"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer Full Name</span></code></li><li class="L8"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">full_name </span><span class="pun">=</span><span class="pln"> full_name</span></code></li><li class="L9"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer id</span></code></li><li class="L0"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">id </span><span class="pun">=</span><span class="pln"> id</span></code></li><li class="L1"><code class="language-python"><span class="pln">        </span><span class="com"># Location lat</span></code></li><li class="L2"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">lat </span><span class="pun">=</span><span class="pln"> lat</span></code></li><li class="L3"><code class="language-python"><span class="pln">        </span><span class="com"># Location long</span></code></li><li class="L4"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">long </span><span class="pun">=</span><span class="pln"> long</span></code></li><li class="L5"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer short name</span></code></li><li class="L6"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">short_name </span><span class="pun">=</span><span class="pln"> short_name</span></code></li><li class="L7"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer state</span></code></li><li class="L8"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">st </span><span class="pun">=</span><span class="pln"> st</span></code></li><li class="L9"><code class="language-python"><span class="pln">        </span><span class="com"># Dealer zip</span></code></li><li class="L0"><code class="language-python"><span class="pln">        self</span><span class="pun">.</span><span class="pln">zip </span><span class="pun">=</span><span class="pln"> zip</span></code></li><li class="L1"><code class="language-python"></code></li><li class="L2"><code class="language-python"><span class="pln">    </span><span class="kwd">def</span><span class="pln"> __str__</span><span class="pun">(</span><span class="pln">self</span><span class="pun">):</span></code></li><li class="L3"><code class="language-python"><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"Dealer name: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> self</span><span class="pun">.</span><span class="pln">full_name</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-1">Copied!</span></button></pre>
<p>The actual instance attributes may be different from the object returned by the service you created. Update them in<br>above <code>CarDealer</code> class accordingly.</p>
<p>Now we can start calling <code>review-get</code> cloud function service and load the JSON results into a list of <code>CarDealer</code> objects.</p>
<p>There are many ways to make HTTP requests in Django.<br>Here we use a very popular and easy-to-use Python library called <code>requests</code>.</p>
<ul>
<li>Create a new Python file called <code>restapis.py</code> under <code>djangoapp/</code> folder and<br>add a sample <code>get_request</code> method:</li></ul>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li><li>18</li><li>19</li></ol><ol class="linenums"><li class="L0"><code class="language-python"><span class="kwd">import</span><span class="pln"> requests</span></code></li><li class="L1"><code class="language-python"><span class="kwd">import</span><span class="pln"> json</span></code></li><li class="L2"><code class="language-python"><span class="kwd">from</span><span class="pln"> </span><span class="pun">.</span><span class="pln">models </span><span class="kwd">import</span><span class="pln"> </span><span class="typ">CarDealer</span></code></li><li class="L3"><code class="language-python"><span class="kwd">from</span><span class="pln"> requests</span><span class="pun">.</span><span class="pln">auth </span><span class="kwd">import</span><span class="pln"> </span><span class="typ">HTTPBasicAuth</span></code></li><li class="L4"><code class="language-python"></code></li><li class="L5"><code class="language-python"><span class="kwd">def</span><span class="pln"> get_request</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="pun">**</span><span class="pln">kwargs</span><span class="pun">):</span></code></li><li class="L6"><code class="language-python"><span class="pln">    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">kwargs</span><span class="pun">)</span></code></li><li class="L7"><code class="language-python"><span class="pln">    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">"GET from {} "</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">url</span><span class="pun">))</span></code></li><li class="L8"><code class="language-python"><span class="pln">    </span><span class="kwd">try</span><span class="pun">:</span></code></li><li class="L9"><code class="language-python"><span class="pln">        </span><span class="com"># Call get method of requests library with URL and parameters</span></code></li><li class="L0"><code class="language-python"><span class="pln">        response </span><span class="pun">=</span><span class="pln"> requests</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> headers</span><span class="pun">={</span><span class="str">'Content-Type'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'application/json'</span><span class="pun">},</span></code></li><li class="L1"><code class="language-python"><span class="pln">                                    params</span><span class="pun">=</span><span class="pln">kwargs</span><span class="pun">)</span></code></li><li class="L2"><code class="language-python"><span class="pln">    </span><span class="kwd">except</span><span class="pun">:</span></code></li><li class="L3"><code class="language-python"><span class="pln">        </span><span class="com"># If any error occurs</span></code></li><li class="L4"><code class="language-python"><span class="pln">        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">"Network exception occurred"</span><span class="pun">)</span></code></li><li class="L5"><code class="language-python"><span class="pln">    status_code </span><span class="pun">=</span><span class="pln"> response</span><span class="pun">.</span><span class="pln">status_code</span></code></li><li class="L6"><code class="language-python"><span class="pln">    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">"With status {} "</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">status_code</span><span class="pun">))</span></code></li><li class="L7"><code class="language-python"><span class="pln">    json_data </span><span class="pun">=</span><span class="pln"> json</span><span class="pun">.</span><span class="pln">loads</span><span class="pun">(</span><span class="pln">response</span><span class="pun">.</span><span class="pln">text</span><span class="pun">)</span></code></li><li class="L8"><code class="language-python"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> json_data</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-2">Copied!</span></button></pre>
<p>The <code>get_request</code> method has two arguments, the URL to be requested, and a Python keyword arguments representing<br>all URL parameters to be associated with the get call.</p>
<p>The <code>requests.get(url, headers={'Content-Type': 'application/json'},                                     params=kwargs)</code> calls a <code>GET</code> method in <code>requests</code> library with a URL and any URL<br>                                    parameters such as <code>dealerId</code> or <code>state</code>. </p>
<p>The content of the response will be a JSON object to be consumed by other methods such as a Django view.</p>
<p>Next, let’s parse the dealership JSON result returned by the <code>get_request</code> call.</p>
<ul>
<li>Create a <code>get_dealers_from_cf</code> method to call <code>get_request</code> and parse its JSON result.<br>One example method may look like the following:</li></ul>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li><li>18</li><li>19</li></ol><ol class="linenums"><li class="L0"><code class="language-python"><span class="kwd">def</span><span class="pln"> get_dealers_from_cf</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="pun">**</span><span class="pln">kwargs</span><span class="pun">):</span></code></li><li class="L1"><code class="language-python"><span class="pln">    results </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[]</span></code></li><li class="L2"><code class="language-python"><span class="pln">    </span><span class="com"># Call get_request with a URL parameter</span></code></li><li class="L3"><code class="language-python"><span class="pln">    json_result </span><span class="pun">=</span><span class="pln"> get_request</span><span class="pun">(</span><span class="pln">url</span><span class="pun">)</span></code></li><li class="L4"><code class="language-python"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> json_result</span><span class="pun">:</span></code></li><li class="L5"><code class="language-python"><span class="pln">        </span><span class="com"># Get the row list in JSON as dealers</span></code></li><li class="L6"><code class="language-python"><span class="pln">        dealers </span><span class="pun">=</span><span class="pln"> json_result</span><span class="pun">[</span><span class="str">"rows"</span><span class="pun">]</span></code></li><li class="L7"><code class="language-python"><span class="pln">        </span><span class="com"># For each dealer object</span></code></li><li class="L8"><code class="language-python"><span class="pln">        </span><span class="kwd">for</span><span class="pln"> dealer </span><span class="kwd">in</span><span class="pln"> dealers</span><span class="pun">:</span></code></li><li class="L9"><code class="language-python"><span class="pln">            </span><span class="com"># Get its content in `doc` object</span></code></li><li class="L0"><code class="language-python"><span class="pln">            dealer_doc </span><span class="pun">=</span><span class="pln"> dealer</span><span class="pun">[</span><span class="str">"doc"</span><span class="pun">]</span></code></li><li class="L1"><code class="language-python"><span class="pln">            </span><span class="com"># Create a CarDealer object with values in `doc` object</span></code></li><li class="L2"><code class="language-python"><span class="pln">            dealer_obj </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CarDealer</span><span class="pun">(</span><span class="pln">address</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"address"</span><span class="pun">],</span><span class="pln"> city</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"city"</span><span class="pun">],</span><span class="pln"> full_name</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"full_name"</span><span class="pun">],</span></code></li><li class="L3"><code class="language-python"><span class="pln">                                   id</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"id"</span><span class="pun">],</span><span class="pln"> lat</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"lat"</span><span class="pun">],</span><span class="pln"> long</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"long"</span><span class="pun">],</span></code></li><li class="L4"><code class="language-python"><span class="pln">                                   short_name</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"short_name"</span><span class="pun">],</span></code></li><li class="L5"><code class="language-python"><span class="pln">                                   st</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"st"</span><span class="pun">],</span><span class="pln"> zip</span><span class="pun">=</span><span class="pln">dealer_doc</span><span class="pun">[</span><span class="str">"zip"</span><span class="pun">])</span></code></li><li class="L6"><code class="language-python"><span class="pln">            results</span><span class="pun">.</span><span class="pln">append</span><span class="pun">(</span><span class="pln">dealer_obj</span><span class="pun">)</span></code></li><li class="L7"><code class="language-python"></code></li><li class="L8"><code class="language-python"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> results</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-3">Copied!</span></button></pre>
<p>You can see parsing JSON in Python is very similar to accessing data with Python dictionary (key-value pair).<br>You just need to get values from keys. A value could be an object or a collection of objects such as list or dictionary.</p>
<p>Next, let’s create a Django view to call <code>get_dealers_from_cf</code> and return the result as a HTTPResponse to browser.</p>
<ul>
<li>Find the <code>get_dealerships</code> view method in <code>djangoapp/views.py</code>, update the method with following:</li></ul>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li></ol><ol class="linenums"><li class="L0"><code class="language-python"><span class="kwd">def</span><span class="pln"> get_dealerships</span><span class="pun">(</span><span class="pln">request</span><span class="pun">):</span></code></li><li class="L1"><code class="language-python"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> request</span><span class="pun">.</span><span class="pln">method </span><span class="pun">==</span><span class="pln"> </span><span class="str">"GET"</span><span class="pun">:</span></code></li><li class="L2"><code class="language-python"><span class="pln">        url </span><span class="pun">=</span><span class="pln"> </span><span class="str">"your-cloud-function-domain/dealerships/dealer-get"</span></code></li><li class="L3"><code class="language-python"><span class="pln">        </span><span class="com"># Get dealers from the URL</span></code></li><li class="L4"><code class="language-python"><span class="pln">        dealerships </span><span class="pun">=</span><span class="pln"> get_dealers_from_cf</span><span class="pun">(</span><span class="pln">url</span><span class="pun">)</span></code></li><li class="L5"><code class="language-python"><span class="pln">        </span><span class="com"># Concat all dealer's short name</span></code></li><li class="L6"><code class="language-python"><span class="pln">        dealer_names </span><span class="pun">=</span><span class="pln"> </span><span class="str">' '</span><span class="pun">.</span><span class="pln">join</span><span class="pun">([</span><span class="pln">dealer</span><span class="pun">.</span><span class="pln">short_name </span><span class="kwd">for</span><span class="pln"> dealer </span><span class="kwd">in</span><span class="pln"> dealerships</span><span class="pun">])</span></code></li><li class="L7"><code class="language-python"><span class="pln">        </span><span class="com"># Return a list of dealer short name</span></code></li><li class="L8"><code class="language-python"><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">HttpResponse</span><span class="pun">(</span><span class="pln">dealer_names</span><span class="pun">)</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-4">Copied!</span></button></pre>
<ul>
<li>Configure the route for <code>get_dealerships</code> view method in <code>url.py</code>:</li></ul>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li></ol><ol class="linenums"><li class="L0"><code class="language-python"><span class="kwd">from</span><span class="pln"> django</span><span class="pun">.</span><span class="pln">urls </span><span class="kwd">import</span><span class="pln"> path</span></code></li><li class="L1"><code class="language-python"><span class="kwd">from</span><span class="pln"> django</span><span class="pun">.</span><span class="pln">conf</span><span class="pun">.</span><span class="pln">urls</span><span class="pun">.</span><span class="pln">static </span><span class="kwd">import</span><span class="pln"> static</span></code></li><li class="L2"><code class="language-python"><span class="kwd">from</span><span class="pln"> django</span><span class="pun">.</span><span class="pln">conf </span><span class="kwd">import</span><span class="pln"> settings</span></code></li><li class="L3"><code class="language-python"><span class="kwd">from</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> </span><span class="kwd">import</span><span class="pln"> views</span></code></li><li class="L4"><code class="language-python"></code></li><li class="L5"><code class="language-python"><span class="pln">app_name </span><span class="pun">=</span><span class="pln"> </span><span class="str">'djangoapp'</span></code></li><li class="L6"><code class="language-python"><span class="pln">urlpatterns </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span></code></li><li class="L7"><code class="language-python"><span class="pln">    </span><span class="com"># route is a string contains a URL pattern</span></code></li><li class="L8"><code class="language-python"><span class="pln">    </span><span class="com"># view refers to the view function</span></code></li><li class="L9"><code class="language-python"><span class="pln">    </span><span class="com"># name the URL</span></code></li><li class="L0"><code class="language-python"><span class="pln">    path</span><span class="pun">(</span><span class="pln">route</span><span class="pun">=</span><span class="str">''</span><span class="pun">,</span><span class="pln"> view</span><span class="pun">=</span><span class="pln">views</span><span class="pun">.</span><span class="pln">get_dealerships</span><span class="pun">,</span><span class="pln"> name</span><span class="pun">=</span><span class="str">'index'</span><span class="pun">)</span></code></li><li class="L1"><code class="language-python"><span class="pun">]</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> static</span><span class="pun">(</span><span class="pln">settings</span><span class="pun">.</span><span class="pln">MEDIA_URL</span><span class="pun">,</span><span class="pln"> document_root</span><span class="pun">=</span><span class="pln">settings</span><span class="pun">.</span><span class="pln">MEDIA_ROOT</span><span class="pun">)</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-5">Copied!</span></button></pre>
<ul>
<li>Test the <code>get_dealerships</code> view in Theia</li></ul>
<p>To do this, click on the Skills Network button on the right, it will open the “Skills Network Toolbox”. Then click <code>OTHER</code> then <code>Launch Application</code>. From there you should be able to enter the port as <code>8000</code> and launch the development server.</p>
<img src="./03.3.Create Django Proxy Services Of Cloud Functions_files/Launch_Application.png" width="80%" style="border:solid 1px grey;">

<ul>
<li>Go to <code>https://userid-8000.theiadocker-1.proxy.cognitiveclass.ai/djangoapp</code>.<br>You should see a list of dealership names.</li></ul>
<p>More details about how to create Django view and configure URL can be found in this lab:</p>
<p><a href="https://cocl.us/1K9kO" target="_blank">Views and templates</a></p>
<p>You will find more detailed references about <code>requests</code> package at the end of this lab.</p>
<p>Coding practice: create a <code>get_dealer_by_id</code> or <code>get_dealers_by_state</code> method in <code>restapis.py</code>.<br>HINT, the only difference from the <code>get_dealers_from_cf</code> method is adding a dealer id or state URL parameter argument when<br>calling the <code>def get_request(url, **kwargs):</code> method such as <code>get_request(url, dealerId=dealerId)</code>.</p>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-4"><h1 class="pageTitle">Create a Django <code>get_dealer_details</code> view to get reviews of a dealer</h1>
<p>By now, you should understand how to call a cloud function using <code>requests</code> library in Django and<br>convert the JSON results into Python objects. </p>
<p>Next, let’s create another <code>get</code> call to the <code>revew-get</code> cloud function to get reviews for a dealer.</p>
<ul>
<li>Define a <code>DealerReview</code> class in <code>models.py</code>, it may contain the following attributes:<ul>
<li>dealership</li><li>name</li><li>purchase</li><li>review</li><li>purchase_date</li><li>car_make</li><li>car_model</li><li>car_year</li><li>sentiment</li><li>id</li></ul>
</li></ul>
<p>The value of <code>sentiment</code> attribute will be determined by Watson NLU service. It could be <code>positive</code>, <code>neutral</code>, or <code>negative</code>.<br>You will make a Watson NLU call in the next step.</p>
<ul>
<li><p>Create a <code>get_dealer_reviews_from_cf</code> method in <code>restapis.py</code>. It makes a <code>get_request(url, dealerId=dealer_id)</code> method call<br>to get all reviews by dealer’s id. Then it converts the JSON result into a list of <code>DealerReview</code> objects.</p>
</li><li><p>Define a <code>def get_dealer_details(request, dealer_id):</code> view method in <code>views.py</code> to<br>call <code>get_dealer_reviews_from_cf</code> method in <code>restapis.py</code>,<br>and append a list of reviews to context and return a <code>HttpResponse</code>, similar to the dealer names in previous step.</p>
</li></ul>
<p>Here we need to define <code>dealer_id</code> argument to specify which dealer you want to get reviews from.</p>
<ul>
<li><p>Configure the route for <code>get_dealer_details</code> view in <code>url.py</code>.<br>For example, <code>path('dealer/&lt;int:dealer_id&gt;/', views.get_dealer_details, name='dealer_details'),</code>.</p>
</li><li><p>Test the <code>get_dealer_details</code> view in Theia by launching the application with the development server on port <code>8000</code> as done earlier.<br>You should see a list of reviews for a specific dealer.</p>
</li></ul>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-5" style="display:none;"><h1 class="pageTitle">Update the <code>get_dealer_reviews_from_cf</code> view to call Watson NLU for analyzing the sentiment/tone for each review</h1>
<p>Now that you get a list of reviews for a dealer, you could use Watson NLU to analyze their sentiment/tone.<br>Since Watson NLU is not public, you will need to add authentication argument to <code>requests.get()</code> method.</p>
<ul>
<li>Open <code>restapis.py</code>, update <code>get_request(url, **kwargs)</code> by providing an <code>auth</code> argument<br>with an API key you created in IBM Watson NLU.</li></ul>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li></ol><ol class="linenums"><li class="L0"><code><span class="pln">requests</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">params</span><span class="pun">=</span><span class="kwd">params</span><span class="pun">,</span><span class="pln"> headers</span><span class="pun">={</span><span class="str">'Content-Type'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'application/json'</span><span class="pun">},</span></code></li><li class="L1"><code><span class="pln">                                    auth</span><span class="pun">=</span><span class="typ">HTTPBasicAuth</span><span class="pun">(</span><span class="str">'apikey'</span><span class="pun">,</span><span class="pln"> api_key</span><span class="pun">))</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-6">Copied!</span></button></pre>
<p>You may use a <code>if</code> statement to check if <code>api_key</code> was provided and call <code>requests.get()</code> differently.</p>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li></ol><ol class="linenums"><li class="L0"><code><span class="pln"> </span><span class="kwd">if</span><span class="pln"> api_key</span><span class="pun">:</span></code></li><li class="L1"><code><span class="pln">   </span><span class="com"># Basic authentication GET</span></code></li><li class="L2"><code><span class="pln">   request</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">params</span><span class="pun">=</span><span class="kwd">params</span><span class="pun">,</span><span class="pln"> auth</span><span class="pun">=,</span><span class="pln"> </span><span class="pun">...)</span></code></li><li class="L3"><code><span class="pln"> </span><span class="kwd">else</span><span class="pun">:</span></code></li><li class="L4"><code><span class="pln">   </span><span class="com"># no authentication GET</span></code></li><li class="L5"><code><span class="pln">   request</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">params</span><span class="pun">=</span><span class="kwd">params</span><span class="pun">)</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-7">Copied!</span></button></pre>
<ul>
<li>In <code>restapis.py</code> file, create a new <code>analyze_review_sentiments(dealerreview)</code>.</li></ul>
<p>In the method, make a call to the updated <code>get_request(url, **kwargs)</code> method with following parameters:</p>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li></ol><ol class="linenums"><li class="L0"><code class="language-python"><span class="pun">...</span></code></li><li class="L1"><code class="language-python"><span class="pln">  params </span><span class="pun">=</span><span class="pln"> dict</span><span class="pun">()</span></code></li><li class="L2"><code class="language-python"><span class="pln">  params</span><span class="pun">[</span><span class="str">"text"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> kwargs</span><span class="pun">[</span><span class="str">"text"</span><span class="pun">]</span></code></li><li class="L3"><code class="language-python"><span class="pln">  params</span><span class="pun">[</span><span class="str">"version"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> kwargs</span><span class="pun">[</span><span class="str">"version"</span><span class="pun">]</span></code></li><li class="L4"><code class="language-python"><span class="pln">  params</span><span class="pun">[</span><span class="str">"features"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> kwargs</span><span class="pun">[</span><span class="str">"features"</span><span class="pun">]</span></code></li><li class="L5"><code class="language-python"><span class="pln">  params</span><span class="pun">[</span><span class="str">"return_analyzed_text"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> kwargs</span><span class="pun">[</span><span class="str">"return_analyzed_text"</span><span class="pun">]</span></code></li><li class="L6"><code class="language-python"><span class="pln">  response </span><span class="pun">=</span><span class="pln"> requests</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> params</span><span class="pun">=</span><span class="pln">params</span><span class="pun">,</span><span class="pln"> headers</span><span class="pun">={</span><span class="str">'Content-Type'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'application/json'</span><span class="pun">},</span></code></li><li class="L7"><code class="language-python"><span class="pln">                                    auth</span><span class="pun">=</span><span class="typ">HTTPBasicAuth</span><span class="pun">(</span><span class="str">'apikey'</span><span class="pun">,</span><span class="pln"> api_key</span><span class="pun">))</span></code></li><li class="L8"><code class="language-python"><span class="pun">...</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-8">Copied!</span></button></pre>
<p>You can find more detailed references about Watson NLU text analysis at the end of this lab.</p>
<ul>
<li>In <code>restapis.py</code> file, update <code>get_dealer_reviews_from_cf</code> method by assigning the Watson NLU result<br>to the <code>sentiment</code> attribute of a <code>DealerReview</code> object:</li></ul>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li></ol><ol class="linenums"><li class="L0"><code><span class="pun">...</span></code></li><li class="L1"><code><span class="pln">review_obj</span><span class="pun">.</span><span class="pln">sentiment </span><span class="pun">=</span><span class="pln"> analyze_review_sentiments</span><span class="pun">(</span><span class="pln">review_obj</span><span class="pun">.</span><span class="pln">review</span><span class="pun">)</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-9">Copied!</span></button></pre>
<ul>
<li><p>Update <code>get_dealer_details</code> view to also print sentiment for each review:</p>
</li><li><p>Test the updated <code>get_dealer_details</code> view in Theia by launching the application with the development server on port <code>8000</code> as done earlier.</p>
</li></ul>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-6" style="display:none;"><h1 class="pageTitle">Create a <code>add_review</code> Django view to post a dealer review</h1>
<p>By now you have learned how to make various GET calls. </p>
<p>Next, you will be creating a POST call to the <code>review-post</code> cloud function to add a review to a specific dealer.</p>
<ul>
<li>Open <code>restapis.py</code>, create a new <code>post_request(url, json_payload, **kwargs):</code> method.<br>The key statement in this method is calling <code>post</code> method in <code>requests</code> package.</li></ul>
<p>For example, <code>requests.post(url, params=kwargs, json=json_payload)</code>.</p>
<p>The key difference from the <code>get()</code> method is you need to add a <code>json</code> argument with a Python dictionary-like object as request body.</p>
<ul>
<li><p>Open <code>views.py</code>, create a new <code>def add_review(request, dealer_id):</code> method to handle review post request.</p>
</li><li><p>In the <code>add_review</code> view method:</p>
<ul>
<li>First check if user is authenticated because only authenticated users can post reviews for a dealer.</li><li>Create a dictionary object called <code>review</code> to append keys like<br>  (<code>time</code>, <code>name</code>, <code>dealership</code>, <code>review</code>, <code>purchase</code>) and<br>  any attributes you defined in your <code>review-post</code> cloud function.</li></ul>
<p>  For example:</p>
<pre class="prettyprint linenums prettyprinted" style=""><ol class="formatted-line-numbers"><li>1</li><li>2</li><li>3</li></ol><ol class="linenums"><li class="L0"><code><span class="pln">review</span><span class="pun">[</span><span class="str">"time"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> datetime</span><span class="pun">.</span><span class="pln">utcnow</span><span class="pun">().</span><span class="pln">isoformat</span><span class="pun">()</span></code></li><li class="L1"><code><span class="pln">review</span><span class="pun">[</span><span class="str">"dealership"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">11</span></code></li><li class="L2"><code><span class="pln">review</span><span class="pun">[</span><span class="str">"review"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">"This is a great car dealer"</span></code></li></ol><button title="Copy" class="action-code-block copy-code-block multiple-lines"><i class="fa fa-copy" aria-hidden="true"></i><span class="popuptext" id="md-code-block-copy-10">Copied!</span></button></pre>
<ul>
<li>Create another dictionary object called <code>json_payload</code> with one key called <code>review</code>. Like<br>  <code>json_payload["review"] = review</code>. The <code>json_payload</code> will be used as the request body.</li><li>Call the <code>post_request</code> method with the payload</li></ul>
<p>  <code>post_request(url, json_payload, dealerId=dealer_id)</code>.</p>
<ul>
<li>Return the result of <code>post_request</code> to <code>add_review</code> view method. You may print the post response<br>  in console or append it to HTTPResponse and render it on browser.</li></ul>
</li><li><p>Configure the route for <code>add_review</code> view in <code>url.py</code>.</p>
</li></ul>
<p>For example, <code>path('dealer/&lt;int:dealer_id&gt;/', views.get_dealer_details, name='dealer_details')</code>.</p>
<ul>
<li>Test the <code>add_review</code> view in Theia. So when you make an add review post request, the <code>add_view</code><br>method will create a JSON payload contains a review object and post it to your <code>review-post</code> cloud function action.</li></ul>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-7" style="display:none;"><h1 class="pageTitle">Commit your updated project to GitHub</h1>
<p>Commit all updates to the GitHub repository you created so that you can save your work.</p>
<p>If you need to refresh your memory on how to commit and push to GitHub in Theia lab environment, please refer to this lab <a href="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-CD0101EN-SkillsNetwork/labs/GitHubLabs/Github_commit.md.html" target="_blank" rel="noopener noreferrer">Working with git in the Theia lab environment</a></p>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-8" style="display:none;"><h1 class="pageTitle">External References</h1>
<ul>
<li><p><a href="https://requests.readthedocs.io/en/latest/api/?utm_medium=Exinfluencer&amp;utm_source=Exinfluencer&amp;utm_content=000026UJ&amp;utm_term=10006555&amp;utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMCD0321ENSkillsNetwork1046-2022-01-01#main-interface" target="_blank">Requests Developer Interface</a></p>
</li><li><p><a href="https://cloud.ibm.com/apidocs/natural-language-understanding?utm_medium=Exinfluencer&amp;utm_source=Exinfluencer&amp;utm_content=000026UJ&amp;utm_term=10006555&amp;utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMCD0321ENSkillsNetwork1046-2022-01-01#analyzeget" target="_blank">Watson NLU API Reference</a></p>
</li></ul>
<div class="page-footer"><button class="previous">Previous</button><button class="next">Next</button></div></div><div class="page" id="page-9" style="display:none;"><h1 class="pageTitle">Summary</h1>
<p>In this lab, you have learned how to create proxy services to call the cloud functions in Django,<br>convert their JSON results into Python objects such as <code>CarDealer</code> or <code>DealerReview</code>, and return the objects as a HTTPResonse. </p>
<p>In the next lab, you will create Django templates to present those objects.</p>
<h2><span class="header-link octicon octicon-link"></span>Author(s)</h2><h4> Yan Luo </h4><h4></h4>

<h3><span class="header-link octicon octicon-link"></span>Other Contributor(s)</h3><p>Upkar Lidder</p>
<p>Priya</p>
<h2><span class="header-link octicon octicon-link"></span>Changelog</h2><table>
<thead>
<tr>
<th>Date</th>
<th>Version</th>
<th>Changed by</th>
<th>Change Description</th>
</tr>
</thead>
<tbody><tr>
<td>2021-02-22</td>
<td>1.0</td>
<td>Yan Luo</td>
<td>Created new instructions for Capstone project</td>
</tr>
<tr>
<td>2022-09-01</td>
<td>1.1</td>
<td>K Sundararajan</td>
<td>Updated <code>Launch Application</code> instructions as per the new Theia IDE</td>
</tr>
<tr>
<td>2022-09-20</td>
<td>1.2</td>
<td>K Sundararajan</td>
<td>Updated pip (packages installation) command</td>
</tr>
</tbody></table>
<h2><span class="header-link octicon octicon-link"></span></h2><h3> © IBM Corporation 2021. All rights reserved. </h3><h3></h3><div class="page-footer"><button class="previous">Previous</button></div></div></div></div></div>
<div class="editormd-container-mask" style="display: none;"></div>
<div class="editormd-mask"></div></div>
</div>

<script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/jquery.min.js.download"></script>
<script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/editormd.js.download"></script>

<script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/en.js.download"></script>

<script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/common.js.download"></script>
<script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/render.js.download"></script>

<script type="text/javascript">

    $(function () {
        let token = findGetParameter("token");

        let LABS_BASE_URL = 'https://labs.cognitiveclass.ai';
        let asset_library_prefix_url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-CD0321EN-SkillsNetwork';
        let tool_type = "theia";
        let projectId = "";
        let filename = `labs/module_3_backend_services/3-instructional-labs-theia-django-proxy.md`;
        try {
            let projectIdStored = false
            let project = JSON.parse(localStorage.getItem("sn-project"))
            if (project != null) {
                if (projectId in project) {
                    projectIdStored = true
                    if (!(filename in project[projectId])) {
                        project[projectId][filename] = {}
                    }
                }
            }
            if (!projectIdStored) {
                project = {}
                project[projectId] = {}
                project[projectId][filename] = {}
            }
            window.localStorage.setItem("sn-project", JSON.stringify(project))
        }
        catch (e) {
            console.log(e)
        }

        var authorEditor = editormd("test-editormd", "2.0.9", {

            tool_type,
            projectId,
            filename,

            width: "100%",
            //height: "100%",
            autoHeight: true,

            // mode: 'markdown',

            theme: "dark",
            previewTheme: tool_type == "instructional-lab" ? "light" : "dark",
            editorTheme: "pastel-on-dark",

            readOnly: true,

            pluginPath: 'plugins/',


            syncScrolling: false,

            htmlDecode: 'img',

            path: 'editormd/lib/',
            watch: false,

            // markdown,
            toolbar: false,

            atLink: false,
            toc: true,
            tocm: true,
            tocDropdown: false,
            tocTitle: "Table of Contents For your lab!",

            tex: true,
            flowChart: true,
            sequenceDiagram: true,
            codeFold: true, // Doesn't do anything?
            taskList: true,
            emoji: true,

            saveMarkdownToTextarea: true,

            onresize: function () {
                $("html,body").css("overflow", "hidden");

                this.preview.css({
                    width: $(window).width(),
                    height: $(window).height()
                })

                adjustProgressBarWidth()
            },
            fixCodeBlocks: function () {
                adjustCodeBlocks(this);
            },
            onload: function () {
                $("[type=\"file\"]").bind("change", function () {
                    alert($(this).val());
                    authorEditor.cm.replaceSelection($(this).val());
                    console.log($(this).val(), authorEditor);
                });

                this.fullscreen();
                this.previewing();

                setPreviewWatchToolbar(this);

                if (tool_type != "instructional-lab") {
                    fixCustomPlugins(this);
                }
                setAssetLibraryPrefixUrl(asset_library_prefix_url);
                //comms with UI
                setParentUrl(LABS_BASE_URL);
                establishCommsWithUI(this);
                //let the UI know that the author-ide has loaded
                requestToUI({ type: "frame_loaded" });
            }
        });
    });
</script>


<script src="./03.3.Create Django Proxy Services Of Cloud Functions_files/bootstrap.bundle.min.js.download" integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns" crossorigin="anonymous">
    </script>

</body></html>